{"ast":null,"code":"import axios from \"axios\";\n\nconst getList = list => ({\n  type: 'GET_LIST',\n  payload: list\n});\n\nconst deleteRow = () => ({\n  type: 'DEL_ROW'\n});\n\nconst addRow = () => ({\n  type: 'ADD_ROW'\n});\n\nexport const loadList = () => {\n  return function (dispatch) {\n    axios.get('/get-todo').then(res => {\n      dispatch(getList(res.data));\n    }).catch(err => console.log(err));\n  };\n};\nexport const deleteToDo = _id => {\n  return function (dispatch) {\n    axios.post('/delete-todo', {\n      _id\n    }).then(res => {\n      dispatch(deleteRow());\n      dispatch(loadList());\n    }).catch(err => console.log(err));\n  };\n};\nexport const addupdate = (text, update, setText, setUpdate) => {\n  return function (dispatch) {\n    if (update == '') {\n      axios.post('/save-todo', {\n        text\n      }).then(res => {\n        dispatch(addRow);\n        setText('');\n      }).catch(err => console.log(err));\n    } else {\n      axios.post('/update-todo', {\n        _id: update,\n        text\n      }).then(res => {\n        console.log(res.data);\n        setText('');\n        setUpdate('');\n      }).catch(err => console.log(err));\n    }\n  };\n};\nexport const editToDo = (_id, text, setText, setUpdate) => {\n  setUpdate(_id);\n  setText(text);\n};","map":{"version":3,"sources":["/home/mrbilal/Bilal Gamica - TopSol/Projects/mern-todo/src/Redux/actions/TodoActions.js"],"names":["axios","getList","list","type","payload","deleteRow","addRow","loadList","dispatch","get","then","res","data","catch","err","console","log","deleteToDo","_id","post","addupdate","text","update","setText","setUpdate","editToDo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAO,GAAIC,IAAD,KAAS;AACrBC,EAAAA,IAAI,EAAG,UADc;AAErBC,EAAAA,OAAO,EAAGF;AAFW,CAAT,CAAhB;;AAMA,MAAMG,SAAS,GAAG,OAAK;AACnBF,EAAAA,IAAI,EAAG;AADY,CAAL,CAAlB;;AAIA,MAAMG,MAAM,GAAG,OAAK;AAChBH,EAAAA,IAAI,EAAG;AADS,CAAL,CAAf;;AAKA,OAAO,MAAMI,QAAQ,GAAG,MAAI;AAExB,SAAO,UAAUC,QAAV,EAAmB;AACtBR,IAAAA,KAAK,CAACS,GAAN,CAAU,WAAV,EACKC,IADL,CACWC,GAAD,IAAO;AACTH,MAAAA,QAAQ,CAACP,OAAO,CAACU,GAAG,CAACC,IAAL,CAAR,CAAR;AACH,KAHL,EAIKC,KAJL,CAIYC,GAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJlB;AAKH,GAND;AAOH,CATM;AAYP,OAAO,MAAMG,UAAU,GAAIC,GAAD,IAAO;AAC7B,SAAO,UAAUV,QAAV,EAAmB;AACtBR,IAAAA,KAAK,CACAmB,IADL,CACU,cADV,EAC0B;AAACD,MAAAA;AAAD,KAD1B,EAEKR,IAFL,CAEWC,GAAD,IAAO;AACTH,MAAAA,QAAQ,CAACH,SAAS,EAAV,CAAR;AACAG,MAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACH,KALL,EAMKM,KANL,CAMYC,GAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANlB;AAOH,GARD;AAUH,CAXM;AAcP,OAAO,MAAMM,SAAS,GAAG,CAACC,IAAD,EAAOC,MAAP,EAAeC,OAAf,EAAwBC,SAAxB,KAAoC;AAEzD,SAAO,UAAUhB,QAAV,EAAmB;AACtB,QAAGc,MAAM,IAAI,EAAb,EAAgB;AACZtB,MAAAA,KAAK,CACAmB,IADL,CACU,YADV,EACwB;AAACE,QAAAA;AAAD,OADxB,EAEKX,IAFL,CAEWC,GAAD,IAAO;AACTH,QAAAA,QAAQ,CAACF,MAAD,CAAR;AACAiB,QAAAA,OAAO,CAAC,EAAD,CAAP;AACH,OALL,EAMKV,KANL,CAMYC,GAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANlB;AASH,KAVD,MAUO;AACHd,MAAAA,KAAK,CACAmB,IADL,CACU,cADV,EAC0B;AAACD,QAAAA,GAAG,EAACI,MAAL;AAAaD,QAAAA;AAAb,OAD1B,EAEKX,IAFL,CAEWC,GAAD,IAAO;AACTI,QAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACC,IAAhB;AACAW,QAAAA,OAAO,CAAC,EAAD,CAAP;AACAC,QAAAA,SAAS,CAAC,EAAD,CAAT;AACH,OANL,EAOKX,KAPL,CAOYC,GAAD,IAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPlB;AASH;AACJ,GAtBD;AAuBH,CAzBM;AA2BP,OAAO,MAAMW,QAAQ,GAAG,CAACP,GAAD,EAAMG,IAAN,EAAYE,OAAZ,EAAqBC,SAArB,KAAiC;AACrDA,EAAAA,SAAS,CAACN,GAAD,CAAT;AACAK,EAAAA,OAAO,CAACF,IAAD,CAAP;AAEH,CAJM","sourcesContent":["import axios from \"axios\"\n\n\nconst getList = (list)=>({\n    type : 'GET_LIST',\n    payload : list\n})\n\n\nconst deleteRow = ()=>({\n    type : 'DEL_ROW'\n})\n\nconst addRow = ()=>({\n    type : 'ADD_ROW'\n})\n\n\nexport const loadList = ()=>{\n\n    return function (dispatch){\n        axios.get('/get-todo')\n            .then((res)=>{\n                dispatch(getList(res.data))\n            })\n            .catch((err)=>console.log(err))\n    }\n}\n\n\nexport const deleteToDo = (_id)=>{\n    return function (dispatch){\n        axios\n            .post('/delete-todo', {_id})\n            .then((res)=>{\n                dispatch(deleteRow())\n                dispatch(loadList())\n            })\n            .catch((err)=>console.log(err))\n    }\n\n}\n\n\nexport const addupdate = (text, update, setText, setUpdate)=>{\n\n    return function (dispatch){\n        if(update == ''){\n            axios\n                .post('/save-todo', {text})\n                .then((res)=>{\n                    dispatch(addRow)\n                    setText('')\n                })\n                .catch((err)=>console.log(err))\n\n\n        } else {\n            axios\n                .post('/update-todo', {_id:update, text})\n                .then((res)=>{\n                    console.log(res.data)\n                    setText('')\n                    setUpdate('')\n                })\n                .catch((err)=>console.log(err))\n\n        }\n    }\n}\n\nexport const editToDo = (_id, text, setText, setUpdate)=>{\n    setUpdate(_id)\n    setText(text)\n\n}\n\n"]},"metadata":{},"sourceType":"module"}