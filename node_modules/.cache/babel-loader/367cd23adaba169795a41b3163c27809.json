{"ast":null,"code":"var _jsxFileName = \"/home/mrbilal/Projects/mern-todo/src/Pages/history.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport store from '../Redux/store';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  let storedata = useSelector(abc => abc.datareducer.transactions) || [];\n\n  const delrow = (evt, indx) => {\n    storedata.splice(indx, 1);\n    store.dispatch({\n      type: 'DEL_ROW',\n      payload: storedata\n    });\n  };\n\n  const editrow = (evt, indx) => {\n    let editdata = prompt('Enter Data to Update');\n\n    if (editdata) {}\n\n    storedata[indx].text = editdata;\n    store.dispatch({\n      type: 'EDIT_ROW',\n      payload: storedata\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"HISTORY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list\",\n      children: storedata.map((ab, indx) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [ab.text, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: evt => editrow(evt, indx),\n            className: \"edit-btn\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: evt => delrow(evt, indx),\n            className: \"delete-btn\",\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)]\n        }, indx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 12\n  }, this);\n}, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["/home/mrbilal/Projects/mern-todo/src/Pages/history.js"],"names":["store","useSelector","storedata","abc","datareducer","transactions","delrow","evt","indx","splice","dispatch","type","payload","editrow","editdata","prompt","text","map","ab"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;;AAEA,kBAAe,MAAI;AAAA;;AAGf,MAAIC,SAAS,GAAGD,WAAW,CAACE,GAAG,IAAEA,GAAG,CAACC,WAAJ,CAAgBC,YAAtB,CAAX,IAAkD,EAAlE;;AAEA,QAAMC,MAAM,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAa;AACxBN,IAAAA,SAAS,CAACO,MAAV,CAAiBD,IAAjB,EAAsB,CAAtB;AAEAR,IAAAA,KAAK,CAACU,QAAN,CAAe;AACXC,MAAAA,IAAI,EAAE,SADK;AAEXC,MAAAA,OAAO,EAAEV;AAFE,KAAf;AAIH,GAPD;;AASA,QAAMW,OAAO,GAAG,CAACN,GAAD,EAAMC,IAAN,KAAa;AACzB,QAAIM,QAAQ,GAAGC,MAAM,CAAC,sBAAD,CAArB;;AACA,QAAID,QAAJ,EAAc,CAEb;;AACDZ,IAAAA,SAAS,CAACM,IAAD,CAAT,CAAgBQ,IAAhB,GAAuBF,QAAvB;AAEAd,IAAAA,KAAK,CAACU,QAAN,CAAe;AACXC,MAAAA,IAAI,EAAE,UADK;AAEXC,MAAAA,OAAO,EAAEV;AAFE,KAAf;AAIH,GAXD;;AAaA,sBAAO;AAAA,4BAEP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFO,eAGP;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA,gBAEQA,SAAS,CAACe,GAAV,CAAc,CAACC,EAAD,EAAKV,IAAL,KAAY;AAEtB,4BAAO;AAAA,qBACFU,EAAE,CAACF,IADD,oBACO;AAAQ,YAAA,OAAO,EAAGT,GAAD,IAAOM,OAAO,CAACN,GAAD,EAAMC,IAAN,CAA/B;AAA4C,YAAA,SAAS,EAAC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,eAIH;AAAQ,YAAA,OAAO,EAAGD,GAAD,IAAOD,MAAM,CAACC,GAAD,EAAMC,IAAN,CAA9B;AAA2C,YAAA,SAAS,EAAC,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJG;AAAA,WAASA,IAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AAQH,OAVD;AAFR;AAAA;AAAA;AAAA;AAAA,YAHO;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAmBH,CA9CD;AAAA,UAGoBP,WAHpB;AAAA","sourcesContent":["import '../App.css'\r\nimport store from '../Redux/store'\r\nimport {useSelector} from 'react-redux'\r\n\r\nexport default ()=>{\r\n\r\n\r\n    let storedata = useSelector(abc=>abc.datareducer.transactions) || []\r\n    \r\n    const delrow = (evt, indx)=>{\r\n        storedata.splice(indx,1)\r\n\r\n        store.dispatch({\r\n            type: 'DEL_ROW',\r\n            payload: storedata\r\n        })\r\n    }\r\n\r\n    const editrow = (evt, indx)=>{\r\n        let editdata = prompt('Enter Data to Update')\r\n        if (editdata) {\r\n            \r\n        }\r\n        storedata[indx].text = editdata\r\n\r\n        store.dispatch({\r\n            type: 'EDIT_ROW',\r\n            payload: storedata\r\n        })\r\n    }\r\n\r\n    return <div>\r\n\r\n    <h3>HISTORY</h3>\r\n    <ul className=\"list\">\r\n        {\r\n            storedata.map((ab, indx)=>{\r\n                \r\n                return <li key={indx}>\r\n                    {ab.text} <button onClick={(evt)=>editrow(evt, indx)} className='edit-btn'>\r\n                    Edit\r\n                    </button>\r\n                    <button onClick={(evt)=>delrow(evt, indx)} className='delete-btn'>\r\n                        X\r\n                    </button>\r\n                </li>\r\n            })\r\n        }\r\n    </ul>\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}