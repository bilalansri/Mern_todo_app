{"ast":null,"code":"var _jsxFileName = \"/home/mrbilal/Bilal Gamica - TopSol/Projects/mern-todo/src/Screens/ToDo.js\",\n    _s = $RefreshSig$();\n\nimport '../App.css';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { addupdate, editToDo, deleteToDo } from '../Redux/actions/TodoActions';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  // const storedata = useSelector(abc=>abc.datareducer.textData) || []\n  const [todo, setTodo] = useState([]);\n  const [update, setUpdate] = useState('');\n  const [text, setText] = useState('');\n  const nav = useNavigate();\n  const dispatch = useDispatch();\n  let loguser = useSelector(abc => {\n    return abc.userReducer.loginuser || '';\n  });\n  useEffect(() => {}, [todo]);\n\n  if (!loguser.email) {\n    nav('/login');\n  }\n\n  const formHandler = e => {\n    e.preventDefault();\n    dispatch(addupdate(text, update, setText, setUpdate));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"TODO-LIST with Mern/Redux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: update ? 'UPDATE DATA' : 'ADD DATA'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Text...\",\n            onChange: e => setText(e.target.value),\n            value: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: [\" \", update ? 'UPDATE DATA' : 'ADD DATA']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"HISTORY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: todo.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.text, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-btn\",\n              onClick: () => dispatch(editToDo(item._id, item.text, setText, setUpdate)),\n              children: \" Edit \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => dispatch(deleteToDo(item._id)),\n              children: \" X \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this)]\n          }, item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}, \"y+F59x8UUa8MZZFkoMxbfo/0Muk=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});","map":{"version":3,"sources":["/home/mrbilal/Bilal Gamica - TopSol/Projects/mern-todo/src/Screens/ToDo.js"],"names":["useEffect","useState","useSelector","axios","useNavigate","addupdate","editToDo","deleteToDo","useDispatch","todo","setTodo","update","setUpdate","text","setText","nav","dispatch","loguser","abc","userReducer","loginuser","email","formHandler","e","preventDefault","target","value","map","item","_id"],"mappings":"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","sourcesContent":["import '../App.css'\nimport { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport axios from 'axios'\nimport { useNavigate } from 'react-router-dom'\nimport {addupdate, editToDo, deleteToDo} from '../Redux/actions/TodoActions'\nimport { useDispatch } from 'react-redux'\n\n\nexport default ()=>{\n\n    // const storedata = useSelector(abc=>abc.datareducer.textData) || []\n\n    const [todo, setTodo] = useState([])\n    const [update, setUpdate] = useState('')\n    const [text, setText] = useState('')\n\n    const nav = useNavigate()\n    const dispatch = useDispatch()\n\n\n    let loguser = useSelector((abc)=>{\n        return (abc.userReducer.loginuser || '')\n      })\n\n\n\n    useEffect(()=>{\n        \n\n            \n        }, [todo])\n\n        if(!loguser.email){\n            nav('/login')\n        }\n\n    const formHandler = (e)=>{\n\n        e.preventDefault()\n\n        dispatch (addupdate(text, update, setText, setUpdate)) \n    }\n\nreturn <>\n        <h2>\n            TODO-LIST with Mern/Redux\n        </h2>\n\n\n        <div>\n            <h3>\n                {update ? 'UPDATE DATA' : 'ADD DATA'}\n            </h3>\n            <form onSubmit={formHandler}>\n                <div className='form-control'>\n                    <input type='text' placeholder='Enter Text...' onChange={(e)=> setText(e.target.value)} value={text}/>\n                </div>\n                <button className='btn'> {update ? 'UPDATE DATA' : 'ADD DATA'}</button>\n            </form>\n        </div>\n\n\n        <div>\n\n        <h3>HISTORY</h3>\n            <ul className=\"list\">\n            {\n                todo.map((item)=>{\n\n                return <li key={item._id}>\n                    {item.text} <button className='edit-btn' onClick={()=> dispatch (editToDo(item._id, item.text, setText, setUpdate)) }> Edit </button>\n                    <button className='delete-btn' onClick={()=> dispatch (deleteToDo(item._id)) }> X </button>\n                </li>\n                })\n            }\n            </ul>\n        </div>\n    </>\n}"]},"metadata":{},"sourceType":"module"}