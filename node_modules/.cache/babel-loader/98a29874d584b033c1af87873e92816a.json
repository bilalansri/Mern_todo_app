{"ast":null,"code":"var _jsxFileName = \"/home/mrbilal/Projects/mern-todo/src/Pages/HomePage/index.js\",\n    _s = $RefreshSig$();\n\nimport '../../App.css';\nimport { useState } from 'react';\nimport store from '../../Redux/store';\nimport { useForm } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  let [editCheck, setEditCheck] = useState(false);\n\n  const adddata = datas => {\n    store.dispatch({\n      type: 'ADD_DATA',\n      payload: datas\n    });\n  };\n\n  let {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  let storedata = useSelector(abc => abc.datareducer.textData) || [];\n\n  const delrow = (evt, indx) => {\n    storedata.splice(indx, 1);\n    store.dispatch({\n      type: 'DEL_ROW',\n      payload: storedata\n    });\n  };\n\n  const editrow = (evt, indx) => {\n    if (editCheck == true) {}\n\n    let editdata = prompt('Enter Data to Update');\n\n    if (editdata == '') {\n      return;\n    }\n\n    storedata[indx].text = editdata;\n    store.dispatch({\n      type: 'EDIT_ROW',\n      payload: storedata\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"TODO-LIST with Mern/Redux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"ADD DATA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(adddata),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Text...\",\n            ...register('text', {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), errors.text && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Please Enter Some Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Add Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"HISTORY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: storedata.map((ab, indx) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [ab.text, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: evt => editrow(evt, indx),\n              className: \"edit-btn\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: evt => delrow(evt, indx),\n              className: \"delete-btn\",\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }, this)]\n          }, indx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}, \"B+mmdxV7bN1zfh3mPU+fUbZpcfw=\", false, function () {\n  return [useForm, useSelector];\n});","map":{"version":3,"sources":["/home/mrbilal/Projects/mern-todo/src/Pages/HomePage/index.js"],"names":["useState","store","useForm","useSelector","editCheck","setEditCheck","adddata","datas","dispatch","type","payload","register","handleSubmit","formState","errors","storedata","abc","datareducer","textData","delrow","evt","indx","splice","editrow","editdata","prompt","text","required","map","ab"],"mappings":"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","sourcesContent":["import '../../App.css'\nimport { useState } from 'react'\nimport store from '../../Redux/store'\nimport {useForm} from 'react-hook-form'\nimport {useSelector} from 'react-redux'\n\n\nexport default ()=>{\n\n    let [editCheck, setEditCheck] = useState(false)\n\n    const adddata = (datas)=>{\n        \n        store.dispatch({\n            type: 'ADD_DATA',\n            payload: datas\n        })\n    }\n\n    let {register, handleSubmit, formState:{errors}} = useForm()\n\n\n\n    let storedata = useSelector(abc=>abc.datareducer.textData) || []\n    \n    const delrow = (evt, indx)=>{\n        storedata.splice(indx,1)\n\n        store.dispatch({\n            type: 'DEL_ROW',\n            payload: storedata\n        })\n    }\n\n    const editrow = (evt, indx)=>{\n\n        if(editCheck == true){\n\n        }\n\n        let editdata = prompt('Enter Data to Update')\n        if (editdata == '') {\n            return\n        }\n        storedata[indx].text = editdata\n\n        store.dispatch({\n            type: 'EDIT_ROW',\n            payload: storedata\n        })\n    }\n\n\n    return <>\n        <h2>\n            TODO-LIST with Mern/Redux\n        </h2>\n\n        <div>\n            <h3>\n                ADD DATA\n            </h3>\n            <form onSubmit={handleSubmit(adddata)}>\n                <div className='form-control'>\n                    <input type='text' placeholder='Enter Text...' {...register('text' , {required:true})}/>\n                    {errors.text && <div>Please Enter Some Text</div>}\n                </div>\n                <button className='btn'>Add Transaction</button>\n            </form>\n    </div>\n\n\n\n\n    <div>\n\n    <h3>HISTORY</h3>\n    <ul className=\"list\">\n        {\n            storedata.map((ab, indx)=>{\n                \n                return <li key={indx}>\n                    {ab.text} <button onClick={(evt)=>editrow(evt, indx)} className='edit-btn'>\n                    Edit\n                    </button>\n                    <button onClick={(evt)=>delrow(evt, indx)} className='delete-btn'>\n                        X\n                    </button>\n                </li>\n            })\n        }\n    </ul>\n    </div>\n    </>\n}"]},"metadata":{},"sourceType":"module"}