{"ast":null,"code":"var _jsxFileName = \"/home/mrbilal/Projects/mern-todo/src/Pages/HomePage/index.js\",\n    _s = $RefreshSig$();\n\n// import '../../App.css'\n// import { useState } from 'react'\n// import store from '../../Redux/store'\n// import {useForm} from 'react-hook-form'\n// import {useSelector} from 'react-redux'\n// import useHome from '../Hooks/useHome'\n// export default ()=>{\n//     const storedata = useSelector(abc=>abc.datareducer.textData) || []\n//     const [editCheck, setEditCheck] = useState(false)\n//     const [addData, setAdd] = useState('')\n//     const [editData, setEdit] = useState('')\n//     const [a, setA] = useState(null)\n//     // const [editCheck, setEditCheck] = useState('')\n//     const formHandler = (e)=>{\n//         e.preventDefault()\n//         a ? store.dispatch({\n//             type: 'ADD_DATA',\n//             payload: addData \n//         }) : store.dispatch({\n//             type: 'EDIT_ROW',\n//             payload: editData \n//         })\n//         setA(null)  \n//     }\n//     const editrow = (evt, indx)=>{\n//         setEditCheck(true)\n//         const a = storedata[indx]\n//         setEdit(a)\n//     }\n//     const delrow = (evt, indx)=>{\n//         storedata.splice(indx,1)\n//         store.dispatch({\n//             type: 'DEL_ROW',\n//             payload: storedata\n//         })\n//     }\n// return <>\n//         <h2>\n//             TODO-LIST with Mern/Redux\n//         </h2>\n//         {\n//             editCheck ? <div>\n//                 <h3>\n//                     Update DATA\n//                 </h3>\n//                 <form onSubmit={formHandler}>\n//                     <div className='form-control'>\n//                         <input type='text' placeholder='Enter Text...' onChange={(e)=> setEdit(e.target.value)} value={editData}/>\n//                     </div>\n//                     <button className='btn'> Update Data </button>\n//                 </form>\n//             </div> : <div>\n//                 <h3>\n//                     ADD DATA\n//                 </h3>\n//                 <form onSubmit={formHandler}>\n//                     <div className='form-control'>\n//                         <input type='text' placeholder='Enter Text...' onChange={(e)=> setAdd(e.target.value)} value={addData}/>\n//                     </div>\n//                     <button className='btn' onClick={()=>setA(33)}> Add Data </button>\n//                 </form>\n//             </div>\n//         }\n//         <div>\n//         <h3>HISTORY</h3>\n//             <ul className=\"list\">\n//             {\n//                 storedata.map((ab, indx)=>{\n//                 return <li key={indx}>\n//                     {ab} <button onClick={(evt)=>editrow(evt, indx)} className='edit-btn'> Edit </button>\n//                     <button onClick={(evt)=>delrow(evt, indx)} className='delete-btn'> X </button>\n//                 </li>\n//                 })\n//             }\n//             </ul>\n//         </div>\n//     </>\n// }\nimport '../../App.css';\nimport { useState } from 'react';\nimport store from '../../Redux/store';\nimport { useForm } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  let [editCheck, setEditCheck] = useState(false);\n  let [editData, setEditData] = useState();\n\n  const adddata = datas => {\n    store.dispatch({\n      type: 'ADD_DATA',\n      payload: datas\n    });\n  };\n\n  let {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  let storedata = useSelector(abc => abc.datareducer.textData) || [];\n\n  const delrow = (evt, indx) => {\n    storedata.splice(indx, 1);\n    store.dispatch({\n      type: 'DEL_ROW',\n      payload: storedata\n    });\n  };\n\n  const editrow = (evt, indx) => {\n    setEditCheck(true);\n    storedata[indx];\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"TODO-LIST with Mern/Redux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), editCheck ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Update DATA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(editrow),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Text...\",\n            ...register('text', {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }, this), errors.text && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Please Enter Some Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \" Update Data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"ADD DATA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(adddata),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Text...\",\n            ...register('text', {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 21\n          }, this), errors.text && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Please Enter Some Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \" Add Data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"HISTORY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: storedata.map((ab, indx) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [ab.text, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: evt => editrow(evt, indx),\n              className: \"edit-btn\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: evt => delrow(evt, indx),\n              className: \"delete-btn\",\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 21\n            }, this)]\n          }, indx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}, \"etdmUaSdAnMCvnlzwLJ9gFA5nV8=\", false, function () {\n  return [useForm, useSelector];\n});","map":{"version":3,"sources":["/home/mrbilal/Projects/mern-todo/src/Pages/HomePage/index.js"],"names":["useState","store","useForm","useSelector","editCheck","setEditCheck","editData","setEditData","adddata","datas","dispatch","type","payload","register","handleSubmit","formState","errors","storedata","abc","datareducer","textData","delrow","evt","indx","splice","editrow","required","text","map","ab"],"mappings":"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","sourcesContent":["// import '../../App.css'\n// import { useState } from 'react'\n// import store from '../../Redux/store'\n// import {useForm} from 'react-hook-form'\n// import {useSelector} from 'react-redux'\n// import useHome from '../Hooks/useHome'\n\n\n// export default ()=>{\n\n//     const storedata = useSelector(abc=>abc.datareducer.textData) || []\n\n//     const [editCheck, setEditCheck] = useState(false)\n//     const [addData, setAdd] = useState('')\n//     const [editData, setEdit] = useState('')\n//     const [a, setA] = useState(null)\n//     // const [editCheck, setEditCheck] = useState('')\n\n//     const formHandler = (e)=>{\n\n//         e.preventDefault()\n\n//         a ? store.dispatch({\n//             type: 'ADD_DATA',\n//             payload: addData \n//         }) : store.dispatch({\n//             type: 'EDIT_ROW',\n//             payload: editData \n//         })\n\n//         setA(null)  \n        \n//     }\n\n\n//     const editrow = (evt, indx)=>{\n\n//         setEditCheck(true)\n//         const a = storedata[indx]\n//         setEdit(a)\n//     }\n\n//     const delrow = (evt, indx)=>{\n//         storedata.splice(indx,1)\n\n//         store.dispatch({\n//             type: 'DEL_ROW',\n//             payload: storedata\n//         })\n//     }\n\n\n// return <>\n//         <h2>\n//             TODO-LIST with Mern/Redux\n//         </h2>\n\n//         {\n//             editCheck ? <div>\n//                 <h3>\n//                     Update DATA\n//                 </h3>\n//                 <form onSubmit={formHandler}>\n//                     <div className='form-control'>\n//                         <input type='text' placeholder='Enter Text...' onChange={(e)=> setEdit(e.target.value)} value={editData}/>\n//                     </div>\n//                     <button className='btn'> Update Data </button>\n//                 </form>\n//             </div> : <div>\n//                 <h3>\n//                     ADD DATA\n//                 </h3>\n//                 <form onSubmit={formHandler}>\n//                     <div className='form-control'>\n//                         <input type='text' placeholder='Enter Text...' onChange={(e)=> setAdd(e.target.value)} value={addData}/>\n//                     </div>\n//                     <button className='btn' onClick={()=>setA(33)}> Add Data </button>\n//                 </form>\n//             </div>\n//         }\n\n\n//         <div>\n\n//         <h3>HISTORY</h3>\n//             <ul className=\"list\">\n//             {\n//                 storedata.map((ab, indx)=>{\n\n//                 return <li key={indx}>\n//                     {ab} <button onClick={(evt)=>editrow(evt, indx)} className='edit-btn'> Edit </button>\n//                     <button onClick={(evt)=>delrow(evt, indx)} className='delete-btn'> X </button>\n//                 </li>\n//                 })\n//             }\n//             </ul>\n//         </div>\n//     </>\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport '../../App.css'\nimport { useState } from 'react'\nimport store from '../../Redux/store'\nimport {useForm} from 'react-hook-form'\nimport {useSelector} from 'react-redux'\n\n\nexport default ()=>{\n\n    let [editCheck, setEditCheck] = useState(false)\n    let [editData, setEditData] = useState()\n\n    const adddata = (datas)=>{\n        \n        store.dispatch({\n            type: 'ADD_DATA',\n            payload: datas\n        })\n    }\n\n    let {register, handleSubmit, formState:{errors}} = useForm()\n\n\n\n    let storedata = useSelector(abc=>abc.datareducer.textData) || []\n    \n    const delrow = (evt, indx)=>{\n        storedata.splice(indx,1)\n\n        store.dispatch({\n            type: 'DEL_ROW',\n            payload: storedata\n        })\n    }\n\n    const editrow = (evt, indx)=>{\n\n        setEditCheck(true)\n        storedata[indx]\n        \n\n    }\n\n\n\n\n    return <>\n        <h2>\n            TODO-LIST with Mern/Redux\n        </h2>\n\n        {\n            editCheck ? <div>\n            <h3>\n                Update DATA\n            </h3>\n            <form onSubmit={handleSubmit(editrow)}>\n                <div className='form-control'>\n                    <input type='text' placeholder='Enter Text...' {...register('text' , {required:true})}/>\n                    {errors.text && <div>Please Enter Some Text</div>}\n                </div>\n                <button className='btn'> Update Data </button>\n            </form>\n        </div> : <div>\n            <h3>\n                ADD DATA\n            </h3>\n            <form onSubmit={handleSubmit(adddata)}>\n                <div className='form-control'>\n                    <input type='text' placeholder='Enter Text...' {...register('text' , {required:true})}/>\n                    {errors.text && <div>Please Enter Some Text</div>}\n                </div>\n                <button className='btn'> Add Data </button>\n            </form>\n    </div>\n        }\n\n\n    <div>\n\n    <h3>HISTORY</h3>\n    <ul className=\"list\">\n        {\n            storedata.map((ab, indx)=>{\n                \n                return <li key={indx}>\n                    {ab.text} <button onClick={(evt)=>editrow(evt, indx)} className='edit-btn'>\n                    Edit\n                    </button>\n                    <button onClick={(evt)=>delrow(evt, indx)} className='delete-btn'>\n                        X\n                    </button>\n                </li>\n            })\n        }\n    </ul>\n    </div>\n    </>\n}"]},"metadata":{},"sourceType":"module"}