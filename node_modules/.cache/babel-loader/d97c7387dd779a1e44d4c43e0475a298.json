{"ast":null,"code":"var _jsxFileName = \"/home/mrbilal/Projects/mern-todo/src/Pages/HomePage/index.js\",\n    _s = $RefreshSig$();\n\nimport '../../App.css';\nimport { useState } from 'react';\nimport store from '../../Redux/store';\nimport { useForm } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport useHome from '../Hooks/useHome';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const storedata = useSelector(abc => abc.datareducer.textData) || [];\n  const [editCheck, setEditCheck] = useState(false);\n  const [addData, setAdd] = useState('');\n  const [editData, setEdit] = useState('');\n  const [a, setA] = useState('');\n\n  const addform = e => {\n    e.preventDefault();\n\n    if (addData == '') {\n      return;\n    }\n\n    store.dispatch({\n      type: 'ADD_DATA',\n      payload: addData\n    });\n  };\n\n  const editform = e => {\n    e.preventDefault();\n\n    if (editData == '') {\n      return;\n    }\n\n    storedata[a] = editData;\n    store.dispatch({\n      type: 'EDIT_ROW',\n      payload: storedata\n    });\n    setEditCheck(false);\n  };\n\n  const editrow = (evt, indx) => {\n    setEditCheck(true);\n    const a = storedata[indx];\n    setEdit(a);\n    setA(indx);\n  };\n\n  const delrow = (evt, indx) => {\n    storedata.splice(indx, 1);\n    store.dispatch({\n      type: 'DEL_ROW',\n      payload: storedata\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"TODO-LIST with Mern/Redux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), editCheck ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Update DATA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: editform,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Text...\",\n            onChange: e => setEdit(e.target.value),\n            value: editData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \" Update Data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"ADD DATA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addform,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Text...\",\n            onChange: e => setAdd(e.target.value),\n            value: addData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \" Add Data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"HISTORY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: storedata.map((ab, indx) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [ab, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: evt => editrow(evt, indx),\n              className: \"edit-btn\",\n              children: \" Edit \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: evt => delrow(evt, indx),\n              className: \"delete-btn\",\n              children: \" X \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this)]\n          }, indx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}, \"RYWfUaY8ATKI/NfZZEZcbolq4po=\", false, function () {\n  return [useSelector];\n}); // import '../../App.css'\n// import { useState } from 'react'\n// import store from '../../Redux/store'\n// import {useForm} from 'react-hook-form'\n// import {useSelector} from 'react-redux'\n// export default ()=>{\n//     let [editCheck, setEditCheck] = useState(false)\n//     let [editData, setEditData] = useState()\n//     const adddata = (datas)=>{\n//         store.dispatch({\n//             type: 'ADD_DATA',\n//             payload: datas\n//         })\n//     }\n//     let {register, handleSubmit, formState:{errors}} = useForm()\n//     let storedata = useSelector(abc=>abc.datareducer.textData) || []\n//     const delrow = (evt, indx)=>{\n//         storedata.splice(indx,1)\n//         store.dispatch({\n//             type: 'DEL_ROW',\n//             payload: storedata\n//         })\n//     }\n//     const editrow = (evt, indx)=>{\n//         setEditCheck(true)\n//         storedata[indx] = prompt('Update Text')\n//         store.dispatch({\n//             type: 'EDIT_ROW',\n//             payload: storedata \n//         })\n//     }\n//     return <>\n//         <h2>\n//             TODO-LIST with Mern/Redux\n//         </h2>\n//         {\n//             editCheck ? <div>\n//             <h3>\n//                 Update DATA\n//             </h3>\n//             <form onSubmit={handleSubmit(editrow)}>\n//                 <div className='form-control'>\n//                     <input type='text' placeholder='Enter Text...' {...register('text' , {required:true})}/>\n//                     {errors.text && <div>Please Enter Some Text</div>}\n//                 </div>\n//                 <button className='btn'> Update Data </button>\n//             </form>\n//         </div> : <div>\n//             <h3>\n//                 ADD DATA\n//             </h3>\n//             <form onSubmit={handleSubmit(adddata)}>\n//                 <div className='form-control'>\n//                     <input type='text' placeholder='Enter Text...' {...register('text' , {required:true})}/>\n//                     {errors.text && <div>Please Enter Some Text</div>}\n//                 </div>\n//                 <button className='btn'> Add Data </button>\n//             </form>\n//     </div>\n//         }\n//     <div>\n//     <h3>HISTORY</h3>\n//     <ul className=\"list\">\n//         {\n//             storedata.map((ab, indx)=>{\n//                 return <li key={indx}>\n//                     {ab.text} <button onClick={(evt)=>editrow(evt, indx)} className='edit-btn'>\n//                     Edit\n//                     </button>\n//                     <button onClick={(evt)=>delrow(evt, indx)} className='delete-btn'>\n//                         X\n//                     </button>\n//                 </li>\n//             })\n//         }\n//     </ul>\n//     </div>\n//     </>\n// }","map":{"version":3,"sources":["/home/mrbilal/Projects/mern-todo/src/Pages/HomePage/index.js"],"names":["useState","store","useForm","useSelector","useHome","storedata","abc","datareducer","textData","editCheck","setEditCheck","addData","setAdd","editData","setEdit","a","setA","addform","e","preventDefault","dispatch","type","payload","editform","editrow","evt","indx","delrow","splice","target","value","map","ab"],"mappings":"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","sourcesContent":["import '../../App.css'\nimport { useState } from 'react'\nimport store from '../../Redux/store'\nimport {useForm} from 'react-hook-form'\nimport {useSelector} from 'react-redux'\nimport useHome from '../Hooks/useHome'\n\n\nexport default ()=>{\n\n    const storedata = useSelector(abc=>abc.datareducer.textData) || []\n\n    const [editCheck, setEditCheck] = useState(false)\n    const [addData, setAdd] = useState('')\n    const [editData, setEdit] = useState('')\n    const [a, setA] = useState('')\n\n    const addform = (e)=>{\n\n        e.preventDefault()\n\n        if(addData == ''){\n            return\n        }\n\n        store.dispatch({\n            type: 'ADD_DATA',\n            payload: addData \n        })\n\n        \n        \n    }\n\n    const editform = (e)=>{\n\n        e.preventDefault()\n\n        if(editData == ''){\n            return\n        }\n\n        storedata[a] = editData\n\n        store.dispatch({\n            type: 'EDIT_ROW',\n            payload: storedata\n        })\n\n        setEditCheck(false)\n        \n    }\n\n\n    const editrow = (evt, indx)=>{\n\n        setEditCheck(true)\n        const a = storedata[indx]\n        setEdit(a)\n        setA(indx)\n    }\n\n    const delrow = (evt, indx)=>{\n        storedata.splice(indx,1)\n\n        store.dispatch({\n            type: 'DEL_ROW',\n            payload: storedata\n        })\n    }\n\n\nreturn <>\n        <h2>\n            TODO-LIST with Mern/Redux\n        </h2>\n\n        {\n            editCheck ? <div>\n                <h3>\n                    Update DATA\n                </h3>\n                <form onSubmit={editform}>\n                    <div className='form-control'>\n                        <input type='text' placeholder='Enter Text...' onChange={(e)=> setEdit(e.target.value)} value={editData}/>\n                    </div>\n                    <button className='btn'> Update Data </button>\n                </form>\n            </div> : <div>\n                <h3>\n                    ADD DATA\n                </h3>\n                <form onSubmit={addform}>\n                    <div className='form-control'>\n                        <input type='text' placeholder='Enter Text...' onChange={(e)=> setAdd(e.target.value)} value={addData}/>\n                    </div>\n                    <button className='btn'> Add Data </button>\n                </form>\n            </div>\n        }\n\n\n        <div>\n\n        <h3>HISTORY</h3>\n            <ul className=\"list\">\n            {\n                storedata.map((ab, indx)=>{\n\n                return <li key={indx}>\n                    {ab} <button onClick={(evt)=>editrow(evt, indx)} className='edit-btn'> Edit </button>\n                    <button onClick={(evt)=>delrow(evt, indx)} className='delete-btn'> X </button>\n                </li>\n                })\n            }\n            </ul>\n        </div>\n    </>\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import '../../App.css'\n// import { useState } from 'react'\n// import store from '../../Redux/store'\n// import {useForm} from 'react-hook-form'\n// import {useSelector} from 'react-redux'\n\n\n// export default ()=>{\n\n//     let [editCheck, setEditCheck] = useState(false)\n//     let [editData, setEditData] = useState()\n\n//     const adddata = (datas)=>{\n        \n//         store.dispatch({\n//             type: 'ADD_DATA',\n//             payload: datas\n//         })\n//     }\n\n//     let {register, handleSubmit, formState:{errors}} = useForm()\n\n\n\n//     let storedata = useSelector(abc=>abc.datareducer.textData) || []\n    \n//     const delrow = (evt, indx)=>{\n//         storedata.splice(indx,1)\n\n//         store.dispatch({\n//             type: 'DEL_ROW',\n//             payload: storedata\n//         })\n//     }\n\n//     const editrow = (evt, indx)=>{\n\n//         setEditCheck(true)\n//         storedata[indx] = prompt('Update Text')\n\n//         store.dispatch({\n//             type: 'EDIT_ROW',\n//             payload: storedata \n//         })\n        \n\n//     }\n\n\n\n\n//     return <>\n//         <h2>\n//             TODO-LIST with Mern/Redux\n//         </h2>\n\n//         {\n//             editCheck ? <div>\n//             <h3>\n//                 Update DATA\n//             </h3>\n//             <form onSubmit={handleSubmit(editrow)}>\n//                 <div className='form-control'>\n//                     <input type='text' placeholder='Enter Text...' {...register('text' , {required:true})}/>\n//                     {errors.text && <div>Please Enter Some Text</div>}\n//                 </div>\n//                 <button className='btn'> Update Data </button>\n//             </form>\n//         </div> : <div>\n//             <h3>\n//                 ADD DATA\n//             </h3>\n//             <form onSubmit={handleSubmit(adddata)}>\n//                 <div className='form-control'>\n//                     <input type='text' placeholder='Enter Text...' {...register('text' , {required:true})}/>\n//                     {errors.text && <div>Please Enter Some Text</div>}\n//                 </div>\n//                 <button className='btn'> Add Data </button>\n//             </form>\n//     </div>\n//         }\n\n\n//     <div>\n\n//     <h3>HISTORY</h3>\n//     <ul className=\"list\">\n//         {\n//             storedata.map((ab, indx)=>{\n                \n//                 return <li key={indx}>\n//                     {ab.text} <button onClick={(evt)=>editrow(evt, indx)} className='edit-btn'>\n//                     Edit\n//                     </button>\n//                     <button onClick={(evt)=>delrow(evt, indx)} className='delete-btn'>\n//                         X\n//                     </button>\n//                 </li>\n//             })\n//         }\n//     </ul>\n//     </div>\n//     </>\n// }"]},"metadata":{},"sourceType":"module"}