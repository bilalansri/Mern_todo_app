{"ast":null,"code":"var _jsxFileName = \"/home/mrbilal/Bilal Gamica - TopSol/Projects/mern-todo/src/Pages/HomePage/index.js\",\n    _s = $RefreshSig$();\n\nimport '../../App.css';\nimport { useEffect, useState } from 'react';\nimport useHome from '../Hooks/useHome';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n\n  const storedata = useSelector(abc => abc.datareducer.textData) || [];\n  const [todo, setTodo] = useState([]);\n  const [update, setUpdate] = useState(''); // const [todo, setTodo] = useState([])\n  // const [todo, setTodo] = useState([])\n\n  const [editCheck, setEditCheck] = useState(false);\n  const [text, setText] = useState('');\n  const [editData, setEdit] = useState('');\n  const {\n    addform,\n    editform,\n    editrow,\n    delrow\n  } = useHome(text, editData, setEditCheck, storedata, setEdit);\n  useEffect(() => {\n    axios.get('/get-todo').then(res => setTodo(res.data)).catch(err => console.log(err));\n  });\n\n  const addupdate = e => {\n    e.preventDefault();\n\n    if (update == '') {\n      axios.post('/save-todo', {\n        text\n      }).then(res => {\n        console.log(res.data);\n        setText('');\n      }).catch(err => console.log(err));\n    } else {\n      axios.post('/update-todo', {\n        text\n      }).then(res => {\n        console.log(res.data);\n        setText('');\n      }).catch(err => console.log(err));\n    }\n  };\n\n  const editToDo = () => {};\n\n  const deleteToDo = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"TODO-LIST with Mern/Redux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), editCheck ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Update DATA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: editform,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Text...\",\n            onChange: e => setEdit(e.target.value),\n            value: editData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \" Update Data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"ADD DATA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addupdate,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-control\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Text...\",\n            onChange: e => setText(e.target.value),\n            value: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \" Add Data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"HISTORY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list\",\n        children: todo.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.text, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-btn\",\n              onClick: () => editToDo(item._id, item.text),\n              children: \" Edit \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => deleteToDo(item._id),\n              children: \" X \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this)]\n          }, item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}, \"262DnYObPZ0Kqt+ljsZcHKK/bHs=\", false, function () {\n  return [useSelector, useHome];\n});","map":{"version":3,"sources":["/home/mrbilal/Bilal Gamica - TopSol/Projects/mern-todo/src/Pages/HomePage/index.js"],"names":["useEffect","useState","useHome","useSelector","axios","storedata","abc","datareducer","textData","todo","setTodo","update","setUpdate","editCheck","setEditCheck","text","setText","editData","setEdit","addform","editform","editrow","delrow","get","then","res","data","catch","err","console","log","addupdate","e","preventDefault","post","editToDo","deleteToDo","target","value","map","item","_id"],"mappings":"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","sourcesContent":["import '../../App.css'\nimport { useEffect, useState } from 'react'\nimport useHome from '../Hooks/useHome'\nimport { useSelector } from 'react-redux'\nimport axios from 'axios'\n\n\nexport default ()=>{\n\n    const storedata = useSelector(abc=>abc.datareducer.textData) || []\n    const [todo, setTodo] = useState([])\n    const [update, setUpdate] = useState('')\n    // const [todo, setTodo] = useState([])\n    // const [todo, setTodo] = useState([])\n\n    const [editCheck, setEditCheck] = useState(false)\n    const [text, setText] = useState('')\n    const [editData, setEdit] = useState('')\n    \n\n    const {addform, editform, editrow, delrow} = useHome(text, editData, setEditCheck, storedata, setEdit)\n\n    useEffect(()=>{\n        axios.get('/get-todo')\n            .then((res)=>setTodo(res.data))\n            .catch((err)=>console.log(err))\n    })\n\n    const addupdate = (e)=>{\n\n        e.preventDefault()\n\n       \n\n        if(update == ''){\n            axios.post('/save-todo', {text})\n                .then((res)=>{\n                    console.log(res.data)\n                    setText('')\n                })\n                .catch((err)=>console.log(err))\n        } else {\n            axios.post('/update-todo', {text})\n                .then((res)=>{\n                    console.log(res.data)\n                    setText('')\n                })\n                .catch((err)=>console.log(err))\n        }    \n\n    }\n\n    const editToDo = ()=>{\n\n    }\n    const deleteToDo = ()=>{\n\n    }\n\n\nreturn <>\n        <h2>\n            TODO-LIST with Mern/Redux\n        </h2>\n\n        {/* {\n            editCheck ? <div>\n                <h3>\n                    Update DATA\n                </h3>\n                <form onSubmit={editform}>\n                    <div className='form-control'>\n                        <input type='text' placeholder='Enter Text...' onChange={(e)=> setEdit(e.target.value)} value={editData}/>\n                    </div>\n                    <button className='btn'> Update Data </button>\n                </form>\n            </div> : <div>\n                <h3>\n                    ADD DATA\n                </h3>\n                <form onSubmit={addform}>\n                    <div className='form-control'>\n                        <input type='text' placeholder='Enter Text...' onChange={(e)=> setText(e.target.value)} value={text}/>\n                    </div>\n                    <button className='btn'> Add Data </button>\n                </form>\n            </div>\n        } */}\n\n{\n            editCheck ? <div>\n                <h3>\n                    Update DATA\n                </h3>\n                <form onSubmit={editform}>\n                    <div className='form-control'>\n                        <input type='text' placeholder='Enter Text...' onChange={(e)=> setEdit(e.target.value)} value={editData}/>\n                    </div>\n                    <button className='btn'> Update Data </button>\n                </form>\n            </div> : <div>\n                <h3>\n                    ADD DATA\n                </h3>\n                <form onSubmit={addupdate}>\n                    <div className='form-control'>\n                        <input type='text' placeholder='Enter Text...' onChange={(e)=> setText(e.target.value)} value={text}/>\n                    </div>\n                    <button className='btn'> Add Data </button>\n                </form>\n            </div>\n        }\n\n\n        {/* <div>\n\n        <h3>HISTORY</h3>\n            <ul className=\"list\">\n            {\n                storedata.map((ab, indx)=>{\n\n                return <li key={indx}>\n                    {ab} <button onClick={(evt)=>editrow(evt, indx)} className='edit-btn'> Edit </button>\n                    <button onClick={(evt)=>delrow(evt, indx)} className='delete-btn'> X </button>\n                </li>\n                })\n            }\n            </ul>\n        </div> */}\n\n        <div>\n\n        <h3>HISTORY</h3>\n            <ul className=\"list\">\n            {\n                todo.map((item)=>{\n\n                return <li key={item._id}>\n                    {item.text} <button className='edit-btn' onClick={()=>editToDo(item._id, item.text)}> Edit </button>\n                    <button className='delete-btn' onClick={()=>deleteToDo(item._id)}> X </button>\n                </li>\n                })\n            }\n            </ul>\n        </div>\n    </>\n}"]},"metadata":{},"sourceType":"module"}